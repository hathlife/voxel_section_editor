unit BasicConstants;

interface

const
   // Voxel Map Fill Mode
   C_MODE_NONE = 0;
   C_MODE_ALL = 1;
   C_MODE_USED = 2;
   C_MODE_COLOUR = 3;
   C_MODE_NORMAL = 4;

   // Pixel position in the volume.
   C_OUTSIDE_VOLUME = 0;
   C_ONE_AXIS_INFLUENCE = 1;
   C_TWO_AXIS_INFLUENCE = 2;
   C_THREE_AXIS_INFLUENCE = 3;
   C_SEMI_SURFACE = 3;
   C_SURFACE = 4;
   C_INSIDE_VOLUME = 5;

   // Semi-surfaces configuration
   C_SF_BOTTOM_FRONT_LEFT_POINT = 1;
   C_SF_BOTTOM_FRONT_RIGHT_POINT = 2;
   C_SF_BOTTOM_BACK_LEFT_POINT = 4;
   C_SF_BOTTOM_BACK_RIGHT_POINT = 8;
   C_SF_TOP_FRONT_LEFT_POINT = $10;
   C_SF_TOP_FRONT_RIGHT_POINT = $20;
   C_SF_TOP_BACK_LEFT_POINT = $40;
   C_SF_TOP_BACK_RIGHT_POINT = $80;
   C_SF_BOTTOM_FRONT_LINE = $103;
   C_SF_BOTTOM_BACK_LINE = $20C;
   C_SF_BOTTOM_LEFT_LINE = $405;
   C_SF_BOTTOM_RIGHT_LINE = $80A;
   C_SF_TOP_FRONT_LINE = $1030;
   C_SF_TOP_BACK_LINE = $20C0;
   C_SF_TOP_LEFT_LINE = $4050;
   C_SF_TOP_RIGHT_LINE = $80A0;
   C_SF_LEFT_FRONT_LINE = $10011;
   C_SF_LEFT_BACK_LINE = $20044;
   C_SF_RIGHT_FRONT_LINE = $40022;
   C_SF_RIGHT_BACK_LINE = $80088;

   //------------------------------------------------------------------
   // From VoxelModelizerItem.pas
   //------------------------------------------------------------------

   // Vertices
   C_VERT_TOP_LEFT_BACK = 0;
   C_VERT_TOP_RIGHT_BACK = 1;
   C_VERT_TOP_LEFT_FRONT = 2;
   C_VERT_TOP_RIGHT_FRONT = 3;
   C_VERT_BOTTOM_LEFT_BACK = 4;
   C_VERT_BOTTOM_RIGHT_BACK = 5;
   C_VERT_BOTTOM_LEFT_FRONT = 6;
   C_VERT_BOTTOM_RIGHT_FRONT = 7;
   // Edges
   C_EDGE_TOP_LEFT = 0;
   C_EDGE_TOP_RIGHT = 1;
   C_EDGE_TOP_BACK = 2;
   C_EDGE_TOP_FRONT = 3;
   C_EDGE_BOTTOM_LEFT = 4;
   C_EDGE_BOTTOM_RIGHT = 5;
   C_EDGE_BOTTOM_BACK = 6;
   C_EDGE_BOTTOM_FRONT = 7;
   C_EDGE_FRONT_LEFT = 8;
   C_EDGE_FRONT_RIGHT = 9;
   C_EDGE_BACK_LEFT = 10;
   C_EDGE_BACK_RIGHT = 11;
   // Faces
   C_FACE_LEFT = 0;
   C_FACE_RIGHT = 1;
   C_FACE_BACK = 2;
   C_FACE_FRONT = 3;
   C_FACE_BOTTOM = 4;
   C_FACE_TOP = 5;

   // Face Settings
   C_FACE_SET_VERT = 0;
   C_FACE_SET_EDGE = 1;
   C_FACE_SET_FACE = 2;

   // Vertex Positions
   C_VP_HIGH = 8;
   C_VP_MID = C_VP_HIGH div 2;            // 4
   C_VP_DIST0 = C_VP_MID * C_VP_MID;      // 16
   C_VP_DIST1 = C_VP_DIST0 + C_VP_DIST0;  // 32
   C_VP_DIST2 = C_VP_HIGH * C_VP_HIGH;    // 64
   C_VP_DIST3 = C_VP_DIST0 + C_VP_DIST2;  // 80
   C_VP_DIST4 = C_VP_DIST1 + C_VP_DIST2;  // 96
   C_VP_DIST5 = C_VP_DIST2 + C_VP_DIST2;  // 128
   C_VP_DIST6 = C_VP_DIST0 + C_VP_DIST5;  // 144
   C_VP_DIST7 = C_VP_DIST5 + C_VP_DIST2;  // 192

   VertexRequirements: array[0..7] of integer = (C_SF_TOP_BACK_LEFT_POINT, C_SF_TOP_BACK_RIGHT_POINT,
   C_SF_TOP_FRONT_LEFT_POINT, C_SF_TOP_FRONT_RIGHT_POINT, C_SF_BOTTOM_BACK_LEFT_POINT,
   C_SF_BOTTOM_BACK_RIGHT_POINT, C_SF_BOTTOM_FRONT_LEFT_POINT, C_SF_BOTTOM_FRONT_RIGHT_POINT);

   VertexCheck: array[0..55] of byte = (0, 1, 4, 8, 9, 10, 11, 17, 18, 21, 25, 9, 10,
   11, 0, 1, 3, 6, 13, 12, 11, 17, 18, 20, 23, 13, 12, 11, 0, 2, 4, 7, 9, 16, 15,
   17, 19, 21, 24, 9, 16, 15, 0, 2, 3, 5, 13, 14, 15, 17, 19, 20, 22, 13, 14, 15);

   SSVertexesCheck: array[0..55] of byte = (C_SF_TOP_BACK_RIGHT_POINT, C_SF_BOTTOM_BACK_RIGHT_POINT,
   C_SF_TOP_FRONT_RIGHT_POINT, C_SF_BOTTOM_FRONT_RIGHT_POINT, C_SF_TOP_FRONT_LEFT_POINT,
   C_SF_BOTTOM_FRONT_LEFT_POINT, C_SF_BOTTOM_BACK_LEFT_POINT, C_SF_TOP_BACK_LEFT_POINT,
   C_SF_BOTTOM_BACK_LEFT_POINT, C_SF_TOP_FRONT_LEFT_POINT, C_SF_BOTTOM_FRONT_LEFT_POINT,
   C_SF_TOP_FRONT_RIGHT_POINT, C_SF_BOTTOM_FRONT_RIGHT_POINT, C_SF_BOTTOM_BACK_RIGHT_POINT,
   C_SF_TOP_FRONT_RIGHT_POINT, C_SF_BOTTOM_FRONT_RIGHT_POINT, C_SF_TOP_BACK_RIGHT_POINT,
   C_SF_BOTTOM_BACK_RIGHT_POINT, C_SF_TOP_BACK_LEFT_POINT, C_SF_BOTTOM_BACK_LEFT_POINT,
   C_SF_BOTTOM_FRONT_LEFT_POINT, C_SF_TOP_FRONT_LEFT_POINT, C_SF_BOTTOM_FRONT_LEFT_POINT,
   C_SF_TOP_BACK_LEFT_POINT, C_SF_BOTTOM_BACK_LEFT_POINT, C_SF_TOP_BACK_RIGHT_POINT,
   C_SF_BOTTOM_BACK_RIGHT_POINT, C_SF_BOTTOM_FRONT_RIGHT_POINT, C_SF_BOTTOM_BACK_RIGHT_POINT,
   C_SF_TOP_BACK_RIGHT_POINT, C_SF_BOTTOM_FRONT_RIGHT_POINT, C_SF_TOP_FRONT_RIGHT_POINT,
   C_SF_BOTTOM_FRONT_LEFT_POINT, C_SF_TOP_FRONT_LEFT_POINT, C_SF_TOP_BACK_LEFT_POINT,
   C_SF_BOTTOM_BACK_LEFT_POINT, C_SF_TOP_BACK_LEFT_POINT, C_SF_BOTTOM_FRONT_LEFT_POINT,
   C_SF_TOP_FRONT_LEFT_POINT, C_SF_BOTTOM_FRONT_RIGHT_POINT, C_SF_TOP_FRONT_RIGHT_POINT,
   C_SF_TOP_BACK_RIGHT_POINT, C_SF_BOTTOM_FRONT_RIGHT_POINT, C_SF_TOP_FRONT_RIGHT_POINT,
   C_SF_BOTTOM_BACK_RIGHT_POINT, C_SF_TOP_BACK_RIGHT_POINT, C_SF_BOTTOM_BACK_LEFT_POINT,
   C_SF_TOP_BACK_LEFT_POINT, C_SF_TOP_FRONT_LEFT_POINT, C_SF_BOTTOM_FRONT_LEFT_POINT,
   C_SF_TOP_FRONT_LEFT_POINT, C_SF_BOTTOM_BACK_LEFT_POINT, C_SF_TOP_BACK_LEFT_POINT,
   C_SF_BOTTOM_BACK_RIGHT_POINT, C_SF_TOP_BACK_RIGHT_POINT, C_SF_TOP_FRONT_RIGHT_POINT);

   EdgeRequirements: array[0..11] of integer = (C_SF_TOP_LEFT_LINE, C_SF_TOP_RIGHT_LINE,
   C_SF_TOP_BACK_LINE, C_SF_TOP_FRONT_LINE, C_SF_BOTTOM_LEFT_LINE, C_SF_BOTTOM_RIGHT_LINE,
   C_SF_BOTTOM_BACK_LINE, C_SF_BOTTOM_FRONT_LINE, C_SF_LEFT_FRONT_LINE, C_SF_RIGHT_FRONT_LINE,
   C_SF_LEFT_BACK_LINE, C_SF_RIGHT_FRONT_LINE);

   EdgeCheck: array[0..35] of byte = (0, 1, 11, 17, 18, 11, 9, 10, 11, 13, 12, 11,
   0, 2, 15, 17, 19, 15, 9, 16, 15, 13, 14, 15, 0, 3, 13, 17, 20, 13, 0, 4, 9, 17,
   21, 9);

   SSEdgesCheck: array[0..35] of integer = (C_SF_TOP_RIGHT_LINE, C_SF_BOTTOM_RIGHT_LINE,
   C_SF_BOTTOM_LEFT_LINE, C_SF_TOP_LEFT_LINE, C_SF_BOTTOM_LEFT_LINE,
   C_SF_BOTTOM_RIGHT_LINE, C_SF_TOP_FRONT_LINE, C_SF_BOTTOM_FRONT_LINE,
   C_SF_BOTTOM_BACK_LINE, C_SF_TOP_BACK_LINE, C_SF_BOTTOM_BACK_LINE,
   C_SF_BOTTOM_FRONT_LINE, C_SF_BOTTOM_RIGHT_LINE, C_SF_TOP_RIGHT_LINE,
   C_SF_TOP_LEFT_LINE, C_SF_BOTTOM_LEFT_LINE, C_SF_TOP_LEFT_LINE,
   C_SF_TOP_RIGHT_LINE, C_SF_BOTTOM_FRONT_LINE, C_SF_TOP_FRONT_LINE,
   C_SF_TOP_BACK_LINE, C_SF_BOTTOM_BACK_LINE, C_SF_TOP_BACK_LINE,
   C_SF_TOP_FRONT_LINE, C_SF_RIGHT_FRONT_LINE, C_SF_RIGHT_BACK_LINE,
   C_SF_LEFT_BACK_LINE, C_SF_LEFT_FRONT_LINE, C_SF_LEFT_BACK_LINE,
   C_SF_RIGHT_BACK_LINE, C_SF_RIGHT_BACK_LINE, C_SF_RIGHT_FRONT_LINE,
   C_SF_LEFT_FRONT_LINE, C_SF_LEFT_BACK_LINE, C_SF_LEFT_FRONT_LINE,
   C_SF_RIGHT_FRONT_LINE);

   FaceCheck: array[0..5] of byte = (0, 17, 9, 13, 15, 11);

   FaceVerts: array [0..23] of byte = (2,6,4,0,1,5,7,3,0,4,5,1,3,7,6,2,7,5,4,6,1,3,2,0);
   FaceEdges: array[0..23] of byte = (8,4,10,0,11,5,9,1,10,6,11,2,9,7,8,3,5,6,4,7,1,3,0,2);

   VertexPoints: array[0..5,0..3,0..1,0..2] of byte = ((((0,C_VP_HIGH,C_VP_HIGH),
   (0,C_VP_HIGH,C_VP_MID)), ((0,C_VP_HIGH,0), (0,C_VP_MID,0)),((0,0,0), (0,0,C_VP_MID)),
   ((0,0,C_VP_HIGH), (0,C_VP_MID,C_VP_HIGH))),(((C_VP_HIGH,0,C_VP_HIGH),
   (C_VP_HIGH,0,C_VP_MID)), ((C_VP_HIGH,0,0), (C_VP_HIGH,C_VP_MID,0)), ((C_VP_HIGH,C_VP_HIGH,0),
   (C_VP_HIGH,C_VP_HIGH,C_VP_MID)), ((C_VP_HIGH,C_VP_HIGH,C_VP_HIGH), (C_VP_HIGH,C_VP_MID,C_VP_HIGH))),
   (((0,0,C_VP_HIGH), (0,0,C_VP_MID)), ((0,0,0), (C_VP_MID,0,0)),((C_VP_HIGH,0,0),
   (C_VP_HIGH,0,C_VP_MID)), ((C_VP_HIGH,0,C_VP_HIGH), (C_VP_MID,0,C_VP_HIGH))),
   (((C_VP_HIGH,C_VP_HIGH,C_VP_HIGH), (C_VP_HIGH,C_VP_HIGH,C_VP_MID)), ((C_VP_HIGH,C_VP_HIGH,0),
   (C_VP_MID,C_VP_HIGH,0)), ((0,C_VP_HIGH,0), (0,C_VP_HIGH,C_VP_MID)), ((0,C_VP_HIGH,C_VP_HIGH),
   (C_VP_MID,C_VP_HIGH,C_VP_HIGH))),(((C_VP_HIGH,C_VP_HIGH,0), (C_VP_HIGH,C_VP_MID,0)),
	((C_VP_HIGH,0,0), (C_VP_MID,0,0)),((0,0,0), (0,C_VP_MID,0)),((0,C_VP_HIGH,0),
   (C_VP_MID,C_VP_HIGH,0))),(((C_VP_HIGH,0,C_VP_HIGH), (C_VP_HIGH,C_VP_MID,C_VP_HIGH)),
	((C_VP_HIGH,C_VP_HIGH,C_VP_HIGH), (C_VP_MID,C_VP_HIGH,C_VP_HIGH)),
   ((0,C_VP_HIGH,C_VP_HIGH), (0,C_VP_MID,C_VP_HIGH)),((0,0,C_VP_HIGH), (C_VP_MID,0,C_VP_HIGH))));

   EdgeCentralPoints: array[0..11,0..2] of byte = 	((0,C_VP_MID,C_VP_HIGH),
   (C_VP_HIGH,C_VP_MID,C_VP_HIGH), (C_VP_MID,0,C_VP_HIGH), (C_VP_MID,C_VP_HIGH,C_VP_HIGH),
   (0,C_VP_MID,0), (C_VP_HIGH,C_VP_MID,0), (C_VP_MID,0,0), (C_VP_MID,C_VP_HIGH,0),
   (0,C_VP_HIGH,C_VP_MID), (C_VP_HIGH,C_VP_HIGH,C_VP_MID), (0,0,C_VP_MID), (C_VP_HIGH,0,C_VP_MID));

   EdgeNeighboorList: array[0..47] of byte = (C_EDGE_TOP_FRONT, C_EDGE_FRONT_LEFT, C_EDGE_BACK_LEFT,
   C_EDGE_TOP_BACK, C_EDGE_TOP_BACK, C_EDGE_BACK_RIGHT, C_EDGE_FRONT_RIGHT, C_EDGE_TOP_FRONT,
   C_EDGE_TOP_LEFT, C_EDGE_BACK_LEFT, C_EDGE_BACK_RIGHT, C_EDGE_TOP_RIGHT, C_EDGE_TOP_RIGHT,
   C_EDGE_FRONT_RIGHT, C_EDGE_FRONT_LEFT, C_EDGE_TOP_LEFT, C_EDGE_FRONT_LEFT, C_EDGE_BOTTOM_FRONT,
   C_EDGE_BOTTOM_BACK, C_EDGE_BACK_LEFT, C_EDGE_BACK_RIGHT, C_EDGE_BOTTOM_BACK, C_EDGE_BOTTOM_FRONT,
   C_EDGE_FRONT_RIGHT, C_EDGE_BACK_LEFT, C_EDGE_BOTTOM_LEFT, C_EDGE_BOTTOM_RIGHT, C_EDGE_BACK_RIGHT,
   C_EDGE_FRONT_RIGHT, C_EDGE_BOTTOM_RIGHT, C_EDGE_BOTTOM_BACK, C_EDGE_FRONT_LEFT, C_EDGE_TOP_FRONT,
   C_EDGE_BOTTOM_FRONT, C_EDGE_BOTTOM_LEFT, C_EDGE_TOP_LEFT, C_EDGE_TOP_RIGHT, C_EDGE_BOTTOM_RIGHT,
   C_EDGE_BOTTOM_FRONT, C_EDGE_TOP_FRONT, C_EDGE_TOP_LEFT, C_EDGE_BOTTOM_LEFT, C_EDGE_BOTTOM_BACK,
   C_EDGE_TOP_BACK, C_EDGE_TOP_BACK, C_EDGE_BOTTOM_BACK, C_EDGE_BOTTOM_RIGHT, C_EDGE_TOP_RIGHT);

implementation

end.
