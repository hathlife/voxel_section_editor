varying vec3 N;
varying vec3 v;    
varying vec4 color;

void main (void)  
{  
   vec3 L = normalize(gl_LightSource[0].position.xyz - v);   
   vec3 E = normalize(-v); // we are in Eye Coordinates, so EyePos is (0,0,0)  
   vec3 R = normalize(reflect(-L,N));  
 
   //calculate Ambient Term:  
   vec4 Iamb = (gl_FrontLightProduct[0].ambient + gl_FrontLightModelProduct.sceneColor) * gl_FrontMaterial.ambient;    

   //calculate Diffuse Term:  
	vec4 Idiff = gl_FrontLightProduct[0].diffuse * max(dot(N,L), 0.0);   
	
	// calculate Specular Term:
	vec4 Ispec = vec4(0.0, 0.0, 0.0, 0.0);
	if (gl_FrontMaterial.shininess > 0.0)
	{
		Ispec = gl_FrontMaterial.specular * gl_FrontLightProduct[0].specular * pow(max(dot(R,E),0.0),gl_FrontMaterial.shininess);
	}

   // write Total Color:  
   gl_FragColor = clamp(color * (Iamb + Idiff + Ispec),0.0,1.0);   
}